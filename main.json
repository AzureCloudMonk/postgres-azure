{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "tenantName": {
            "type": "string",
            "defaultValue": "barbaz"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "chgeuer",
            "metadata": { "description": "Admin user name for the Virtual Machines." }
        },
        "adminSecureShellKey": {
            "type": "string",
            "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAk/ViUPrGp7KoJLuN2PgofgMyw7SN9zfLYFDDR0TRYa8cOvJlE8NdZYt6Oqa4aL/fslKr9bmlMCdawhZRL7sHccIIS0I0zG7iD15rQL3/Y5aZOf3ML+bebpSj+SE5OeHT9iobgsYpK8gq72d8tmZZAfKhx6fRJsgC2j2xXH/GveoZ5GkHnhJUYuYPmNjEb/PK7LT43XuP+E9Rderr3LPUTuBeGVW9do0HS7X8I2uTn0+BqgkZLOO4FCnSXxh1u6fuD++ZgOZVmB6Q1xEdHSA7LLnPkjDZqbWezLIh5cSdNPUW2JG7tMxQTAZzVoNMb6vAVsfslB16rqZQ21EdIq+0pw== chgeuer-dcos-1",
            "metadata": { "description": "Admin SSH key for the Virtual Machines." }
        },
        "postgresqlUsername": {
            "type": "string",
            "defaultValue": "pgadmin",
            "metadata": { "description": "PostgreSQL user name" }
        },
        "postgresqlPassword": {
            "type": "securestring",
            "metadata": { "description": "PostgreSQL password" }
        },
        "postgresqlInstanceCount": {
            "defaultValue": 2, "minValue": 2, "maxValue": 10, "type": "int",
            "metadata": { "description": "Number of postgreSQL servers in the cluster." }
        },
        "postgresqlInstanceSize": {
            "defaultValue": "Standard_DS2_v2",
            "allowedValues": [
                "Standard_DS1", "Standard_DS2", "Standard_DS3", "Standard_DS4",
                "Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
                "Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5", 
                "Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
                "Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS14_v2", "Standard_DS15_v2"
            ],
            "type": "string",
            "metadata": { "description": "Size of the postgreSQL servers in the cluster." }
        },
        "zookeeperInstanceSize": {
            "defaultValue": "Standard_DS1_v2",
            "allowedValues": [
                "Standard_DS1", "Standard_DS2", "Standard_DS3", "Standard_DS4",
                "Standard_DS11", "Standard_DS12", "Standard_DS13", "Standard_DS14",
                "Standard_GS1", "Standard_GS2", "Standard_GS3", "Standard_GS4", "Standard_GS5", 
                "Standard_DS1_v2", "Standard_DS2_v2", "Standard_DS3_v2", "Standard_DS4_v2", "Standard_DS5_v2",
                "Standard_DS11_v2", "Standard_DS12_v2", "Standard_DS13_v2", "Standard_DS14_v2", "Standard_DS15_v2"
            ],
            "type": "string",
            "metadata": { "description": "Size of the ZooKeeeper servers in the cluster." }
        },
        "postgresAzureVersion": {
            "defaultValue": "master",
            "type": "string"
        }
    },
    "variables": {
        "commonSettings": {
            "baseUrl": "[concat('https://raw.githubusercontent.com/chgeuer/postgres-azure/',parameters('postgresAzureVersion'),'/')]",
            "tenantName": "[parameters('tenantName')]",
            "constants": {
                "apiVersions": {
                    "availabilitySets": "2016-04-30-preview"
                }
            },
            "vnet": {  
                "name": "[concat(parameters('tenantName'),'-vnet')]",
                "address": "10.0.0.0/16",
                "subnet": {
                    "postgresql": {
                        "name": "subnet-postgresql", 
                        "nsgName": "nsg-postgresql",
                        "addressRangePrefix": "10.0.0",
                        "address": "10.0.0.0/24"
                    },
                    "zookeeper": {
                        "name": "subnet-zookeeper",
                        "nsgName": "nsg-zookeeper",
                        "addressRangePrefix": "10.0.1",
                        "address": "10.0.1.0/24"
                    }
                }
            },
            "softwareversions": {
                "zookeeper": "3.4.9",
                "java4zookeeper1": "7u75", "java4zookeeper2": "b13",
                "_testedNiko": {
                    "name": "tested by Niko",
                    "patroni": "6eb2e2114453545256ac7cbfec55bda285ffb955",
                    "postgres": "9.5"
                },
                "patroni_1_1": {
                    "name": "patroni v1.1",
                    "patroni": "05951f9b5bbaaf7cd771025f3d8e8f23897d7357",
                    "postgres": "9.5"
                },
                "patroni_1_2_4": {
                    "name": "patroni v1.2.4",
                    "patroni": "720d08d1b4bc906fc47ec66ac6d645c75951a1bf",
                    "postgres": "9.6"
                }
            },
            "instanceCount": { 
                "postgresql": 2,
                "postgresqlDataDiskCount": 3,
                "zookeeper": 2
            },
            "vm": {
                "postgresql": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "16.04-LTS",
                    "version": "latest"
                },
                "zookeeper": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "16.04-LTS",
                    "version": "latest"
                }
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('commonSettings').tenantName, '-publicip')]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 30,
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('commonSettings').tenantName, '-publicip')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "loadbalancer-postgres",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', concat(variables('commonSettings').tenantName, '-publicip'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "postgresqlFrontendIPConfiguration",
                        "properties": {
                            "publicIPAddress": { "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('commonSettings').tenantName, '-publicip'))]" }
                        }
                    }
                ],
                "backendAddressPools": [ { "name": "postgresqlBackendAddressPool" } ],
                "probes": [
                    {
                        "name": "sshProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    },
                    {
                        "name": "postgresqlProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 5000,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "loadBalancingRule-ssh",
                        "properties": {
                            "protocol": "Tcp",
                            "frontendPort": 22,
                            "backendPort": 22,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 30,
                            "frontendIPConfiguration": { "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'loadbalancer-postgres'), '/frontendIPConfigurations/', 'postgresqlFrontendIPConfiguration')]" },
                            "backendAddressPool": { "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'loadbalancer-postgres'), '/backendAddressPools/', 'postgresqlBackendAddressPool')]" },
                            "probe": { "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'loadbalancer-postgres'), '/probes/', 'sshProbe')]" }
                        }
                    },
                    {
                        "name": "loadBalancingRule-postgresql",
                        "properties": {
                            "protocol": "Tcp",
                            "frontendPort": 5000,
                            "backendPort": 5000,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 30,
                            "frontendIPConfiguration": { "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'loadbalancer-postgres'), '/frontendIPConfigurations/', 'postgresqlFrontendIPConfiguration')]" },
                            "backendAddressPool": { "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'loadbalancer-postgres'), '/backendAddressPools/', 'postgresqlBackendAddressPool')]" },
                            "probe": { "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'loadbalancer-postgres'), '/probes/', 'postgresqlProbe')]" }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('commonSettings').vnet.subnet.postgresql.nsgName]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh-in",
                        "properties": {
                            "priority": 100,
                            "description": "Allow TCP/22 Inbound (Internet->PostgreSQL Server)",
                            "access": "Allow",
                            "direction": "Inbound",
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "Internet",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "[variables('commonSettings').vnet.subnet.postgresql.address]",
                            "destinationPortRange": "22"
                        }
                    },
                    {
                        "name": "postgresql-in",
                        "properties": {
                            "priority": 101,
                            "description": "Allow TCP/80 Inbound (Internet->PostgreSQL Server)",
                            "access": "Allow",
                            "direction": "Inbound",
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "Internet",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "[variables('commonSettings').vnet.subnet.postgresql.address]",
                            "destinationPortRange": "5000"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('commonSettings').vnet.subnet.zookeeper.nsgName]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "zookeeper-in",
                        "properties": {
                            "priority": 100,
                            "description": "Allow TCP/2181 Inbound (Patroni --> ZooKeeper)",
                            "access": "Allow",
                            "direction": "Inbound",
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "[variables('commonSettings').vnet.subnet.postgresql.address]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "[variables('commonSettings').vnet.subnet.zookeeper.address]",
                            "destinationPortRange": "2181"
                        }
                    },
                    {
                        "name": "zookeeper-cluster-port-1",
                        "properties": {
                            "priority": 101,
                            "description": "Allow TCP/2888 Inbound (ZooKeeper --> ZooKeeper)",
                            "access": "Allow",
                            "direction": "Inbound",
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "[variables('commonSettings').vnet.subnet.zookeeper.address]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "[variables('commonSettings').vnet.subnet.zookeeper.address]",
                            "destinationPortRange": "2888"
                        }
                    },
                    {
                        "name": "zookeeper-cluster-port-2",
                        "properties": {
                            "priority": 102,
                            "description": "Allow TCP/3888 Inbound (ZooKeeper --> ZooKeeper)",
                            "access": "Allow",
                            "direction": "Inbound",
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "[variables('commonSettings').vnet.subnet.zookeeper.address]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "[variables('commonSettings').vnet.subnet.zookeeper.address]",
                            "destinationPortRange": "3888"
                        }
                    },
                    {
                        "name": "ssh-in",
                        "properties": {
                            "priority": 103,
                            "description": "Allow TCP/22 Inbound",
                            "access": "Allow",
                            "direction": "Inbound",
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "[variables('commonSettings').vnet.subnet.postgresql.address]",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('commonSettings').vnet.name]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('commonSettings').vnet.subnet.postgresql.nsgName)]",
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('commonSettings').vnet.subnet.zookeeper.nsgName)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [ "[variables('commonSettings').vnet.address]" ]
                },
                "subnets": [
                    {
                        "name": "[variables('commonSettings').vnet.subnet.postgresql.name]",
                        "properties": {
                            "addressPrefix": "[variables('commonSettings').vnet.subnet.postgresql.address]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('commonSettings').vnet.subnet.postgresql.nsgName)]"
                            }
                        }
                    },
                    {
                        "name": "[variables('commonSettings').vnet.subnet.zookeeper.name]",
                        "properties": {
                            "addressPrefix": "[variables('commonSettings').vnet.subnet.zookeeper.address]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',  variables('commonSettings').vnet.subnet.zookeeper.nsgName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[concat('availabilitySet-postgresql-', variables('commonSettings').tenantName)]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformFaultDomainCount": 3,
                "platformUpdateDomainCount": 5,
                "managed": true
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('networkInterface-', 'postgresql', '-', copyIndex())]",
            "copy": { "name": "postgresqlNicCopy", "count": "[variables('commonSettings').instanceCount.postgresql]" },
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('commonSettings').vnet.name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('networkInterface-ipConfiguration-', 'postgresql', '-', copyIndex())]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(variables('commonSettings').vnet.subnet.postgresql.addressRangePrefix, '.', copyIndex(10))]",
                            "subnet": { "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('commonSettings').vnet.name), '/subnets/', variables('commonSettings').vnet.subnet.postgresql.name)]" },
                            "loadBalancerBackendAddressPools": [ { "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'loadbalancer-postgres'), '/backendAddressPools/', 'postgresqlBackendAddressPool')]" } ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/disks",
            "name": "[concat('osDisk-', 'postgresql', '-', copyIndex())]",
            "copy": { "name": "postgresqlOsDiskCopy", "count": "[variables('commonSettings').instanceCount.postgresql]" },
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "osType": "Linux",
                "accountType": "Premium_LRS",
                "diskSizeGB": 128,
                "creationData": {
                    "createOption": "FromImage",
                    "imageReference": {
                        "id": "[concat('/Subscriptions/', subscription().subscriptionId, '/Providers/Microsoft.Compute/Locations/',resourceGroup().location, '/Publishers/', variables('commonSettings').vm.postgresql.publisher, '/ArtifactTypes/VMImage/Offers/', variables('commonSettings').vm.postgresql.offer, '/Skus/', variables('commonSettings').vm.postgresql.sku, '/Versions/', variables('commonSettings').vm.postgresql.version)]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/disks",
            "name": "dataDisk1",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "accountType": "Premium_LRS",
                "diskSizeGB": 128,
                "creationData": {
                    "createOption": "Empty"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat('virtualMachine-', 'postgresql', '-', copyIndex())]",
            "copy": { "name": "postgresqlVmCopy", "count": "[variables('commonSettings').instanceCount.postgresql]" },
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', concat('availabilitySet-postgresql-', variables('commonSettings').tenantName))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat('networkInterface-', 'postgresql', '-', copyIndex()))]",
                "[concat('Microsoft.Compute/disks/', concat('osDisk-', 'postgresql', '-', copyIndex()))]"
            ],
            "properties": {
                "hardwareProfile": { "vmSize": "[parameters('postgresqlInstanceSize')]" },
                "availabilitySet": { 
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat('availabilitySet-postgresql-', variables('commonSettings').tenantName))]" 
                },
                "osProfile": {
                    "computerName": "[concat('pg', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": { 
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [ 
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminSecureShellKey')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": 
                    {
                        "publisher": "[variables('commonSettings').vm.postgresql.publisher]",
                        "offer": "[variables('commonSettings').vm.postgresql.offer]",
                        "sku": "[variables('commonSettings').vm.postgresql.sku]",
                        "version": "[variables('commonSettings').vm.postgresql.version]"
                    },
                    "osDisk": {
                        "name": "[concat('osDisk-', 'postgresql', '-', copyIndex())]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": { 
                    "networkInterfaces": [ 
                        { 
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('networkInterface-', 'postgresql', '-', copyIndex()))]" 
                        } 
                    ] 
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat('virtualMachine-', 'postgresql', '-', copyIndex(), '/extension')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[concat('Microsoft.Compute/virtualMachines/', concat('virtualMachine-', 'postgresql', '-', copyIndex()))]" ],
            "copy": { "name": "postgresqlVmExtensionCopy", "count": "[variables('commonSettings').instanceCount.postgresql]" },
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.2",
                "settings": {
                    "fileUris": [
                        "[concat(variables('commonSettings').baseUrl, 'scripts/setup-raid.sh')]",
                        "[concat(variables('commonSettings').baseUrl, 'scripts/start-zk.sh')]",
                        "[concat(variables('commonSettings').baseUrl, 'scripts/start-pg.sh')]"
                    ],
                    "commandToExecute": "[concat('./start-pg.sh', ' ', parameters('tenantName'), ' ', concat(variables('commonSettings').vnet.subnet.zookeeper.addressRangePrefix, '.10'), ' ', variables('commonSettings').instanceCount.zookeeper, ' ', concat(variables('commonSettings').vnet.subnet.postgresql.addressRangePrefix, '.10'), ' ', variables('commonSettings').instanceCount.postgresql, ' ', copyIndex(), ' ', parameters('postgresqlUsername'), ' ', concat('\"', parameters('postgresqlPassword'), '\"'), ' ', variables('commonSettings').softwareversions._testedNiko.patroni, ' ', variables('commonSettings').softwareversions._testedNiko.postgres)]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[concat('availabilitySet-zookeeper-', variables('commonSettings').tenantName)]",
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformFaultDomainCount": 3,
                "platformUpdateDomainCount": 5,
                "managed": true
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat('networkInterface-', 'zookeeper', '-', copyIndex())]",
            "copy": { "name": "zookeeperNicCopy", "count": "[variables('commonSettings').instanceCount.zookeeper]" },
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('commonSettings').vnet.name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('networkInterface-ipConfiguration-', 'zookeeper', '-', copyIndex())]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(variables('commonSettings').vnet.subnet.zookeeper.addressRangePrefix, '.', copyIndex(10))]",
                            "subnet": { "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('commonSettings').vnet.name), '/subnets/', variables('commonSettings').vnet.subnet.zookeeper.name)]" }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/disks",
            "name": "[concat('osDisk-', 'zookeeper', '-', copyIndex())]",
            "copy": { "name": "zookeeperOsDiskCopy", "count": "[variables('commonSettings').instanceCount.zookeeper]" },
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "osType": "Linux",
                "accountType": "Premium_LRS",
                "diskSizeGB": 128,
                "creationData": {
                    "createOption": "FromImage",
                    "imageReference": {
                        "id": "[concat('/Subscriptions/', subscription().subscriptionId, '/Providers/Microsoft.Compute/Locations/',resourceGroup().location, '/Publishers/', variables('commonSettings').vm.zookeeper.publisher, '/ArtifactTypes/VMImage/Offers/', variables('commonSettings').vm.zookeeper.offer, '/Skus/', variables('commonSettings').vm.zookeeper.sku, '/Versions/', variables('commonSettings').vm.zookeeper.version)]"
                    }
                }
            }
        },

        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat('virtualMachine-', 'zookeeper', '-', copyIndex())]",
            "copy": { "name": "zookeeperVmCopy", "count": "[variables('commonSettings').instanceCount.zookeeper]" },
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/availabilitySets/', concat('availabilitySet-zookeeper-', variables('commonSettings').tenantName))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat('networkInterface-', 'zookeeper', '-', copyIndex()))]",
                "[concat('Microsoft.Compute/disks/', concat('osDisk-', 'zookeeper', '-', copyIndex()))]"
            ],
            "properties": {
                "hardwareProfile": { "vmSize": "[parameters('zookeeperInstanceSize')]" },
                "availabilitySet": { 
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat('availabilitySet-zookeeper-', variables('commonSettings').tenantName))]" 
                },
                "osProfile": {
                    "computerName": "[concat('zk', copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": { 
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [ 
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminSecureShellKey')]"
                                }
                            ]
                        }
                    }
                },
                "storageProfile": {
                    "imageReference": 
                    {
                        "publisher": "[variables('commonSettings').vm.zookeeper.publisher]",
                        "offer": "[variables('commonSettings').vm.zookeeper.offer]",
                        "sku": "[variables('commonSettings').vm.zookeeper.sku]",
                        "version": "[variables('commonSettings').vm.zookeeper.version]"
                    },
                    "osDisk": {
                        "name": "[concat('osDisk-', 'zookeeper', '-', copyIndex())]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": { 
                    "networkInterfaces": [ 
                        { 
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat('networkInterface-', 'zookeeper', '-', copyIndex()))]" 
                        } 
                    ] 
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat('virtualMachine-', 'zookeeper', '-', copyIndex(), '/extension')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[resourceGroup().location]",
            "dependsOn": [ "[concat('Microsoft.Compute/virtualMachines/', concat('virtualMachine-', 'zookeeper', '-', copyIndex()))]" ],
            "copy": { "name": "zookeeperVmExtensionCopy", "count": "[variables('commonSettings').instanceCount.zookeeper]" },
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.2",
                "settings": {
                    "fileUris": [
                        "[concat(variables('commonSettings').baseUrl, 'scripts/start-zk.sh')]"
                    ],
                    "commandToExecute": "[concat('./start-zk.sh', ' ', copyIndex(), ' ', variables('commonSettings').instanceCount.zookeeper, ' ', concat(variables('commonSettings').vnet.subnet.zookeeper.addressRangePrefix, '.10'), ' ', variables('commonSettings').softwareversions.zookeeper, ' ', variables('commonSettings').softwareversions.java4zookeeper1, ' ', variables('commonSettings').softwareversions.java4zookeeper2)]"
                }
            }
        }
    ],
    "outputs": {
        
    }
}